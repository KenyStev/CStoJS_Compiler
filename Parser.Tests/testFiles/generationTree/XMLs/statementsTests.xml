<?xml version="1.0" encoding="utf-8"?>
<CompilationUnitNode xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <UsingDirectives />
  <defaultNamespace>
    <Identifier>
      <Name>default</Name>
      <Attributes />
    </Identifier>
    <Class IsAbstract="false">
      <encapsulation type="RW_PUBLIC" />
      <Identifier>
        <Name>stmtTests</Name>
        <Attributes />
      </Identifier>
      <Inheritanceses />
      <Fields />
      <Constructors />
      <Methods>
        <Method>
          <encapsulation type="RW_PUBLIC" />
          <Modifier type="RW_STATIC" />
          <methodHeaderNode>
            <returnType>
              <VoidType />
              <IsVoid>true</IsVoid>
            </returnType>
            <Identifier>
              <Name>mayBeEmpryBlock</Name>
              <Attributes />
            </Identifier>
            <Parameters />
          </methodHeaderNode>
          <statemetBlock>
            <statements>
              <StatementNode xsi:type="StatementBlockNode">
                <statements>
                  <StatementNode xsi:type="StatementBlockNode">
                    <statements>
                      <StatementNode xsi:nil="true" />
                      <StatementNode xsi:nil="true" />
                      <StatementNode xsi:nil="true" />
                      <StatementNode xsi:nil="true" />
                      <StatementNode xsi:nil="true" />
                      <StatementNode xsi:nil="true" />
                      <StatementNode xsi:type="StatementBlockNode">
                        <statements>
                          <StatementNode xsi:nil="true" />
                          <StatementNode xsi:nil="true" />
                          <StatementNode xsi:nil="true" />
                          <StatementNode xsi:nil="true" />
                          <StatementNode xsi:nil="true" />
                        </statements>
                      </StatementNode>
                      <StatementNode xsi:nil="true" />
                      <StatementNode xsi:nil="true" />
                      <StatementNode xsi:type="StatementBlockNode">
                        <statements />
                      </StatementNode>
                      <StatementNode xsi:nil="true" />
                      <StatementNode xsi:nil="true" />
                      <StatementNode xsi:nil="true" />
                      <StatementNode xsi:nil="true" />
                      <StatementNode xsi:nil="true" />
                      <StatementNode xsi:nil="true" />
                    </statements>
                  </StatementNode>
                </statements>
              </StatementNode>
              <StatementNode xsi:type="StatementBlockNode">
                <statements />
              </StatementNode>
              <StatementNode xsi:type="StatementBlockNode">
                <statements />
              </StatementNode>
              <StatementNode xsi:type="StatementBlockNode">
                <statements />
              </StatementNode>
              <StatementNode xsi:type="StatementBlockNode">
                <statements />
              </StatementNode>
              <StatementNode xsi:type="StatementBlockNode">
                <statements />
              </StatementNode>
              <StatementNode xsi:type="StatementBlockNode">
                <statements />
              </StatementNode>
              <StatementNode xsi:type="StatementBlockNode">
                <statements />
              </StatementNode>
              <StatementNode xsi:nil="true" />
              <StatementNode xsi:nil="true" />
              <StatementNode xsi:nil="true" />
              <StatementNode xsi:nil="true" />
              <StatementNode xsi:type="StatementBlockNode">
                <statements />
              </StatementNode>
              <StatementNode xsi:type="StatementBlockNode">
                <statements />
              </StatementNode>
              <StatementNode xsi:type="StatementBlockNode">
                <statements />
              </StatementNode>
              <StatementNode xsi:type="StatementBlockNode">
                <statements />
              </StatementNode>
              <StatementNode xsi:nil="true" />
              <StatementNode xsi:nil="true" />
              <StatementNode xsi:type="StatementBlockNode">
                <statements />
              </StatementNode>
            </statements>
          </statemetBlock>
        </Method>
        <Method>
          <encapsulation type="RW_PRIVATE" />
          <Modifier type="RW_STATIC" />
          <methodHeaderNode>
            <returnType>
              <VoidType />
              <IsVoid>true</IsVoid>
            </returnType>
            <Identifier>
              <Name>selectionStmt</Name>
              <Attributes />
            </Identifier>
            <Parameters />
          </methodHeaderNode>
          <statemetBlock>
            <statements>
              <StatementNode xsi:type="LocalVariableDeclarationNode">
                <LocalVariables>
                  <Variable IsStatic="false">
                    <identifier>
                      <Name>hola</Name>
                      <Attributes />
                    </identifier>
                    <PrimitiveTypeNode type="RW_BOOL" />
                    <ExpressionNode xsi:type="LiteralBoolNode">
                      <Value>false</Value>
                    </ExpressionNode>
                  </Variable>
                </LocalVariables>
              </StatementNode>
              <StatementNode xsi:type="LocalVariableDeclarationNode">
                <LocalVariables>
                  <Variable IsStatic="false">
                    <identifier>
                      <Name>mama</Name>
                      <Attributes />
                    </identifier>
                    <PrimitiveTypeNode type="RW_STRING" />
                    <ExpressionNode xsi:type="LiteralStringNode">
                      <Value>"adios"</Value>
                    </ExpressionNode>
                  </Variable>
                </LocalVariables>
              </StatementNode>
              <StatementNode xsi:type="IfStatementNode">
                <expression xsi:type="LiteralBoolNode">
                  <Value>true</Value>
                </expression>
                <statements xsi:type="StatementBlockNode">
                  <statements>
                    <StatementNode xsi:type="IfStatementNode">
                      <expression xsi:type="AssignExpressionNode">
                        <unaryExpression xsi:type="IdNode">
                          <Name>hola</Name>
                          <Attributes />
                        </unaryExpression>
                        <assignType>OP_ASSIGN_MULTIPLICATION</assignType>
                        <assignExpression xsi:type="LiteralIntNode">
                          <Value>9</Value>
                        </assignExpression>
                      </expression>
                    </StatementNode>
                    <StatementNode xsi:type="LocalVariableDeclarationNode">
                      <LocalVariables>
                        <Variable IsStatic="false">
                          <identifier>
                            <Name>value</Name>
                            <Attributes />
                          </identifier>
                          <PrimitiveTypeNode type="RW_INT" />
                        </Variable>
                      </LocalVariables>
                    </StatementNode>
                    <StatementNode xsi:type="IfStatementNode">
                      <expression xsi:type="IsTypeTestNode">
                        <leftExpression xsi:type="GroupedExpressionNode">
                          <expression xsi:type="TernaryExpressionNode">
                            <conditionalExpression xsi:type="IdNode">
                              <Name>hola</Name>
                              <Attributes />
                            </conditionalExpression>
                            <trueExpression xsi:type="GroupedExpressionNode">
                              <expression xsi:type="SumExpressionNode">
                                <leftOperand xsi:type="GroupedExpressionNode">
                                  <expression xsi:type="SumExpressionNode">
                                    <leftOperand xsi:type="SubExpressionNode">
                                      <leftOperand xsi:type="GroupedExpressionNode">
                                        <expression xsi:type="DivNode">
                                          <leftOperand xsi:type="MultNode">
                                            <leftOperand xsi:type="LiteralIntNode">
                                              <Value>5</Value>
                                            </leftOperand>
                                            <rightOperand xsi:type="LiteralIntNode">
                                              <Value>9</Value>
                                            </rightOperand>
                                          </leftOperand>
                                          <rightOperand xsi:type="LiteralIntNode">
                                            <Value>3</Value>
                                          </rightOperand>
                                        </expression>
                                      </leftOperand>
                                      <rightOperand xsi:type="LiteralIntNode">
                                        <Value>7</Value>
                                      </rightOperand>
                                    </leftOperand>
                                    <rightOperand xsi:type="DivNode">
                                      <leftOperand xsi:type="GroupedExpressionNode">
                                        <expression xsi:type="SumExpressionNode">
                                          <leftOperand xsi:type="MultNode">
                                            <leftOperand xsi:type="LiteralIntNode">
                                              <Value>2</Value>
                                            </leftOperand>
                                            <rightOperand xsi:type="LiteralIntNode">
                                              <Value>7</Value>
                                            </rightOperand>
                                          </leftOperand>
                                          <rightOperand xsi:type="LiteralIntNode">
                                            <Value>4</Value>
                                          </rightOperand>
                                        </expression>
                                      </leftOperand>
                                      <rightOperand xsi:type="GroupedExpressionNode">
                                        <expression xsi:type="SubExpressionNode">
                                          <leftOperand xsi:type="GroupedExpressionNode">
                                            <expression xsi:type="ShiftRightNode">
                                              <leftExpression xsi:type="LiteralIntNode">
                                                <Value>128</Value>
                                              </leftExpression>
                                              <additiveExpression xsi:type="MultNode">
                                                <leftOperand xsi:type="LiteralIntNode">
                                                  <Value>5</Value>
                                                </leftOperand>
                                                <rightOperand xsi:type="LiteralIntNode">
                                                  <Value>5</Value>
                                                </rightOperand>
                                              </additiveExpression>
                                            </expression>
                                          </leftOperand>
                                          <rightOperand xsi:type="DivNode">
                                            <leftOperand xsi:type="GroupedExpressionNode">
                                              <expression xsi:type="ShiftLeftNode">
                                                <leftExpression xsi:type="LiteralIntNode">
                                                  <Value>1</Value>
                                                </leftExpression>
                                                <additiveExpression xsi:type="MultNode">
                                                  <leftOperand xsi:type="LiteralIntNode">
                                                    <Value>7</Value>
                                                  </leftOperand>
                                                  <rightOperand xsi:type="LiteralIntNode">
                                                    <Value>46</Value>
                                                  </rightOperand>
                                                </additiveExpression>
                                              </expression>
                                            </leftOperand>
                                            <rightOperand xsi:type="LiteralIntNode">
                                              <Value>3</Value>
                                            </rightOperand>
                                          </rightOperand>
                                        </expression>
                                      </rightOperand>
                                    </rightOperand>
                                  </expression>
                                </leftOperand>
                                <rightOperand xsi:type="LiteralIntNode">
                                  <Value>15</Value>
                                </rightOperand>
                              </expression>
                            </trueExpression>
                            <falseExpression xsi:type="GroupedExpressionNode">
                              <expression xsi:type="TernaryExpressionNode">
                                <conditionalExpression xsi:type="GroupedExpressionNode">
                                  <expression xsi:type="EqualExpressionNode">
                                    <leftOperand xsi:type="GroupedExpressionNode">
                                      <expression xsi:type="AssignExpressionNode">
                                        <unaryExpression xsi:type="IdNode">
                                          <Name>mama</Name>
                                          <Attributes />
                                        </unaryExpression>
                                        <assignType>OP_ASSIGN_SUM</assignType>
                                        <assignExpression xsi:type="SumExpressionNode">
                                          <leftOperand xsi:type="LiteralStringNode">
                                            <Value>" como"</Value>
                                          </leftOperand>
                                          <rightOperand xsi:type="GroupedExpressionNode">
                                            <expression xsi:type="MultNode">
                                              <leftOperand xsi:type="LiteralIntNode">
                                                <Value>9</Value>
                                              </leftOperand>
                                              <rightOperand xsi:type="LiteralIntNode">
                                                <Value>5</Value>
                                              </rightOperand>
                                            </expression>
                                          </rightOperand>
                                        </assignExpression>
                                      </expression>
                                    </leftOperand>
                                    <rightOperand xsi:type="LiteralStringNode">
                                      <Value>"s"</Value>
                                    </rightOperand>
                                  </expression>
                                </conditionalExpression>
                                <trueExpression xsi:type="LiteralIntNode">
                                  <Value>3</Value>
                                </trueExpression>
                                <falseExpression xsi:type="LiteralIntNode">
                                  <Value>6</Value>
                                </falseExpression>
                              </expression>
                            </falseExpression>
                          </expression>
                        </leftExpression>
                        <type xsi:type="PrimitiveTypeNode" type="RW_INT" />
                      </expression>
                      <statements xsi:type="StatementBlockNode">
                        <statements>
                          <StatementNode xsi:type="StatementExpressionNode">
                            <expressionNode xsi:type="AssignExpressionNode">
                              <unaryExpression xsi:type="IdNode">
                                <Name>value</Name>
                                <Attributes />
                              </unaryExpression>
                              <assignType>OP_ASSIGN</assignType>
                              <assignExpression xsi:type="LiteralIntNode">
                                <Value>7</Value>
                              </assignExpression>
                            </expressionNode>
                          </StatementNode>
                        </statements>
                      </statements>
                      <elseBock>
                        <statements xsi:type="StatementBlockNode">
                          <statements>
                            <StatementNode xsi:type="StatementExpressionNode">
                              <expressionNode xsi:type="AssignExpressionNode">
                                <unaryExpression xsi:type="IdNode">
                                  <Name>value</Name>
                                  <Attributes />
                                </unaryExpression>
                                <assignType>OP_ASSIGN</assignType>
                                <assignExpression xsi:type="LiteralIntNode">
                                  <Value>9</Value>
                                </assignExpression>
                              </expressionNode>
                            </StatementNode>
                            <StatementNode xsi:type="IfStatementNode">
                              <expression xsi:type="GreaterThanExpressionNode">
                                <leftExpression xsi:type="AccessorNode">
                                  <primary xsi:type="IdNode">
                                    <Name>look_ahead</Name>
                                    <Attributes />
                                  </primary>
                                  <identifier>
                                    <Name>Count</Name>
                                    <Attributes />
                                  </identifier>
                                </leftExpression>
                                <shiftExpression xsi:type="LiteralIntNode">
                                  <Value>0</Value>
                                </shiftExpression>
                              </expression>
                              <statements xsi:type="StatementBlockNode">
                                <statements>
                                  <StatementNode xsi:type="StatementExpressionNode">
                                    <expressionNode xsi:type="AssignExpressionNode">
                                      <unaryExpression xsi:type="IdNode">
                                        <Name>token</Name>
                                        <Attributes />
                                      </unaryExpression>
                                      <assignType>OP_ASSIGN</assignType>
                                      <assignExpression xsi:type="ArrayAccessExpressionNode">
                                        <identifier xsi:type="IdNode">
                                          <Name>look_ahead</Name>
                                          <Attributes />
                                        </identifier>
                                        <arrayAccessList>
                                          <ArrayOfExpressionNode>
                                            <ExpressionNode xsi:type="LiteralIntNode">
                                              <Value>0</Value>
                                            </ExpressionNode>
                                          </ArrayOfExpressionNode>
                                        </arrayAccessList>
                                      </assignExpression>
                                    </expressionNode>
                                  </StatementNode>
                                  <StatementNode xsi:type="StatementExpressionNode">
                                    <expressionNode xsi:type="FunctionCallExpressionNode">
                                      <identifier xsi:type="IdNode">
                                        <Name>removeLookAhead</Name>
                                        <Attributes />
                                      </identifier>
                                      <arguments>
                                        <ArgumentNode>
                                          <LiteralIntNode>
                                            <Value>0</Value>
                                          </LiteralIntNode>
                                        </ArgumentNode>
                                      </arguments>
                                    </expressionNode>
                                  </StatementNode>
                                </statements>
                              </statements>
                              <elseBock>
                                <statements xsi:type="StatementBlockNode">
                                  <statements>
                                    <StatementNode xsi:type="StatementExpressionNode">
                                      <expressionNode xsi:type="AssignExpressionNode">
                                        <unaryExpression xsi:type="IdNode">
                                          <Name>token</Name>
                                          <Attributes />
                                        </unaryExpression>
                                        <assignType>OP_ASSIGN</assignType>
                                        <assignExpression xsi:type="FunctionCallExpressionNode">
                                          <identifier xsi:type="AccessorNode">
                                            <primary xsi:type="IdNode">
                                              <Name>lexer</Name>
                                              <Attributes />
                                            </primary>
                                            <identifier>
                                              <Name>GetNextToken</Name>
                                              <Attributes />
                                            </identifier>
                                          </identifier>
                                          <arguments />
                                        </assignExpression>
                                      </expressionNode>
                                    </StatementNode>
                                  </statements>
                                </statements>
                              </elseBock>
                            </StatementNode>
                          </statements>
                        </statements>
                      </elseBock>
                    </StatementNode>
                    <StatementNode xsi:type="SwitchStatementNode">
                      <expression xsi:type="IdNode">
                        <Name>value</Name>
                        <Attributes />
                      </expression>
                      <switchBodyNode>
                        <switchSections>
                          <SwitchSectionNode>
                            <switchLabels>
                              <CaseNode>
                                <caseType>RW_CASE</caseType>
                                <expression xsi:type="LiteralIntNode">
                                  <Value>9</Value>
                                </expression>
                              </CaseNode>
                            </switchLabels>
                            <stmts>
                              <StatementNode xsi:type="StatementBlockNode">
                                <statements>
                                  <StatementNode xsi:type="LocalVariableDeclarationNode">
                                    <LocalVariables>
                                      <Variable IsStatic="false">
                                        <identifier>
                                          <Name>ass</Name>
                                          <Attributes />
                                        </identifier>
                                        <TypeNode xsi:type="VarTypeNode" />
                                        <ExpressionNode xsi:type="ArrayInstantiationNode">
                                          <type xsi:type="AbstractTypeNode">
                                            <Identifier>
                                              <Name>stmtTests</Name>
                                              <Attributes />
                                            </Identifier>
                                          </type>
                                          <arrayType>
                                            <AbstractTypeNode>
                                              <Identifier>
                                                <Name>stmtTests</Name>
                                                <Attributes />
                                              </Identifier>
                                            </AbstractTypeNode>
                                            <MultiDimArrays>
                                              <MultiDimArray dimensions="4" />
                                            </MultiDimArrays>
                                          </arrayType>
                                          <initialization>
                                            <ArrayInitializers />
                                          </initialization>
                                        </ExpressionNode>
                                      </Variable>
                                    </LocalVariables>
                                  </StatementNode>
                                </statements>
                              </StatementNode>
                              <StatementNode xsi:type="JumpStatementNode">
                                <type>RW_BREAK</type>
                              </StatementNode>
                            </stmts>
                          </SwitchSectionNode>
                          <SwitchSectionNode>
                            <switchLabels>
                              <CaseNode>
                                <caseType>RW_CASE</caseType>
                                <expression xsi:type="LiteralIntNode">
                                  <Value>8</Value>
                                </expression>
                              </CaseNode>
                              <CaseNode>
                                <caseType>RW_DEFAULT</caseType>
                              </CaseNode>
                            </switchLabels>
                            <stmts>
                              <StatementNode xsi:type="IfStatementNode">
                                <expression xsi:type="IdNode">
                                  <Name>jajaja</Name>
                                  <Attributes />
                                </expression>
                                <statements xsi:type="IfStatementNode">
                                  <expression xsi:type="IdNode">
                                    <Name>xdxdxd</Name>
                                    <Attributes />
                                  </expression>
                                  <statements xsi:type="IfStatementNode">
                                    <expression xsi:type="IdNode">
                                      <Name>rufl</Name>
                                      <Attributes />
                                    </expression>
                                    <statements xsi:type="StatementBlockNode">
                                      <statements>
                                        <StatementNode xsi:type="StatementExpressionNode">
                                          <expressionNode xsi:type="AssignExpressionNode">
                                            <unaryExpression xsi:type="IdNode">
                                              <Name>ass</Name>
                                              <Attributes />
                                            </unaryExpression>
                                            <assignType>OP_ASSIGN</assignType>
                                            <assignExpression xsi:type="LiteralStringNode">
                                              <Value>@"que pasu prrro?"</Value>
                                            </assignExpression>
                                          </expressionNode>
                                        </StatementNode>
                                      </statements>
                                    </statements>
                                  </statements>
                                </statements>
                              </StatementNode>
                              <StatementNode xsi:type="JumpStatementNode">
                                <type>RW_BREAK</type>
                              </StatementNode>
                            </stmts>
                          </SwitchSectionNode>
                        </switchSections>
                      </switchBodyNode>
                    </StatementNode>
                  </statements>
                </statements>
                <elseBock>
                  <statements xsi:type="StatementBlockNode">
                    <statements />
                  </statements>
                </elseBock>
              </StatementNode>
            </statements>
          </statemetBlock>
        </Method>
        <Method>
          <encapsulation type="RW_PUBLIC" />
          <Modifier type="RW_STATIC" />
          <methodHeaderNode>
            <returnType>
              <VoidType />
              <IsVoid>true</IsVoid>
            </returnType>
            <Identifier>
              <Name>iterationStmt</Name>
              <Attributes />
            </Identifier>
            <Parameters />
          </methodHeaderNode>
          <statemetBlock>
            <statements>
              <StatementNode xsi:type="StatementExpressionNode">
                <expressionNode xsi:type="FunctionCallExpressionNode">
                  <identifier xsi:type="AccessorNode">
                    <primary xsi:type="BaseReferenceAccessNode" />
                    <identifier>
                      <Name>iterationStmt</Name>
                      <Attributes />
                    </identifier>
                  </identifier>
                  <arguments />
                </expressionNode>
              </StatementNode>
              <StatementNode xsi:type="ForStatementNode" />
              <StatementNode xsi:type="ForStatementNode">
                <StatementBlock xsi:type="StatementBlockNode">
                  <statements>
                    <StatementNode xsi:type="WhileStatementNode">
                      <expression xsi:type="LiteralBoolNode">
                        <Value>false</Value>
                      </expression>
                      <body xsi:type="StatementBlockNode">
                        <statements>
                          <StatementNode xsi:type="LocalVariableDeclarationNode">
                            <LocalVariables>
                              <Variable IsStatic="false">
                                <identifier>
                                  <Name>ultimatum</Name>
                                  <Attributes />
                                </identifier>
                                <TypeNode xsi:type="VarTypeNode" />
                                <ExpressionNode xsi:type="LiteralStringNode">
                                  <Value>"adios compita"</Value>
                                </ExpressionNode>
                              </Variable>
                            </LocalVariables>
                          </StatementNode>
                        </statements>
                      </body>
                    </StatementNode>
                    <StatementNode xsi:type="DoWhileStatementNode">
                      <expression xsi:type="LiteralIntNode">
                        <Value>0</Value>
                      </expression>
                      <body xsi:type="StatementBlockNode">
                        <statements />
                      </body>
                    </StatementNode>
                    <StatementNode xsi:type="ForeachStatementNode">
                      <type xsi:type="VarTypeNode" />
                      <identifier>
                        <Name>type</Name>
                        <Attributes />
                      </identifier>
                      <expression xsi:type="IdNode">
                        <Name>types</Name>
                        <Attributes />
                      </expression>
                      <body xsi:type="IfStatementNode">
                        <expression xsi:type="FunctionCallExpressionNode">
                          <identifier xsi:type="AccessorNode">
                            <primary xsi:type="IdNode">
                              <Name>type</Name>
                              <Attributes />
                            </primary>
                            <identifier>
                              <Name>Contains</Name>
                              <Attributes />
                            </identifier>
                          </identifier>
                          <arguments>
                            <ArgumentNode>
                              <ExpressionNode xsi:type="AccessorNode">
                                <primary xsi:type="IdNode">
                                  <Name>token</Name>
                                  <Attributes />
                                </primary>
                                <identifier>
                                  <Name>type</Name>
                                  <Attributes />
                                </identifier>
                              </ExpressionNode>
                            </ArgumentNode>
                          </arguments>
                        </expression>
                        <statements xsi:type="StatementBlockNode">
                          <statements />
                        </statements>
                      </body>
                    </StatementNode>
                  </statements>
                </StatementBlock>
              </StatementNode>
            </statements>
          </statemetBlock>
        </Method>
        <Method>
          <encapsulation type="RW_PUBLIC" />
          <Modifier type="RW_STATIC" />
          <methodHeaderNode>
            <returnType>
              <VoidType />
              <IsVoid>true</IsVoid>
            </returnType>
            <Identifier>
              <Name>statementsExpressions</Name>
              <Attributes />
            </Identifier>
            <Parameters />
          </methodHeaderNode>
          <statemetBlock>
            <statements>
              <StatementNode xsi:type="LocalVariableDeclarationNode">
                <LocalVariables>
                  <Variable IsStatic="false">
                    <identifier>
                      <Name>nameVar</Name>
                      <Attributes />
                    </identifier>
                    <AbstractTypeNode>
                      <Identifier>
                        <Name>namespace1</Name>
                        <Attributes>
                          <Identifier>
                            <Name>namespace2</Name>
                            <Attributes />
                          </Identifier>
                          <Identifier>
                            <Name>namespace3</Name>
                            <Attributes />
                          </Identifier>
                          <Identifier>
                            <Name>MuClass</Name>
                            <Attributes />
                          </Identifier>
                        </Attributes>
                      </Identifier>
                    </AbstractTypeNode>
                    <ExpressionNode xsi:type="ClassInstantioationNode">
                      <type xsi:type="AbstractTypeNode">
                        <Identifier>
                          <Name>namespace1</Name>
                          <Attributes>
                            <Identifier>
                              <Name>namespace2</Name>
                              <Attributes />
                            </Identifier>
                            <Identifier>
                              <Name>namespace3</Name>
                              <Attributes />
                            </Identifier>
                            <Identifier>
                              <Name>MuClass</Name>
                              <Attributes />
                            </Identifier>
                          </Attributes>
                        </Identifier>
                      </type>
                      <arguments />
                    </ExpressionNode>
                  </Variable>
                </LocalVariables>
              </StatementNode>
              <StatementNode xsi:type="LocalVariableDeclarationNode">
                <LocalVariables>
                  <Variable IsStatic="false">
                    <identifier>
                      <Name>nameVar</Name>
                      <Attributes />
                    </identifier>
                    <TypeNode xsi:type="ArrayType">
                      <AbstractTypeNode>
                        <Identifier>
                          <Name>namespace1</Name>
                          <Attributes>
                            <Identifier>
                              <Name>namespace2</Name>
                              <Attributes />
                            </Identifier>
                            <Identifier>
                              <Name>namespace3</Name>
                              <Attributes />
                            </Identifier>
                            <Identifier>
                              <Name>MuClass</Name>
                              <Attributes />
                            </Identifier>
                          </Attributes>
                        </Identifier>
                      </AbstractTypeNode>
                      <MultiDimArrays>
                        <MultiDimArray dimensions="1" />
                      </MultiDimArrays>
                    </TypeNode>
                    <ExpressionNode xsi:type="ArrayInstantiationNode">
                      <type xsi:type="AbstractTypeNode">
                        <Identifier>
                          <Name>namespace1</Name>
                          <Attributes>
                            <Identifier>
                              <Name>namespace2</Name>
                              <Attributes />
                            </Identifier>
                            <Identifier>
                              <Name>namespace3</Name>
                              <Attributes />
                            </Identifier>
                            <Identifier>
                              <Name>MuClass</Name>
                              <Attributes />
                            </Identifier>
                          </Attributes>
                        </Identifier>
                      </type>
                      <arrayType>
                        <AbstractTypeNode>
                          <Identifier>
                            <Name>namespace1</Name>
                            <Attributes>
                              <Identifier>
                                <Name>namespace2</Name>
                                <Attributes />
                              </Identifier>
                              <Identifier>
                                <Name>namespace3</Name>
                                <Attributes />
                              </Identifier>
                              <Identifier>
                                <Name>MuClass</Name>
                                <Attributes />
                              </Identifier>
                            </Attributes>
                          </Identifier>
                        </AbstractTypeNode>
                        <MultiDimArrays>
                          <MultiDimArray dimensions="1" />
                        </MultiDimArrays>
                      </arrayType>
                      <initialization>
                        <ArrayInitializers />
                      </initialization>
                    </ExpressionNode>
                  </Variable>
                </LocalVariables>
              </StatementNode>
              <StatementNode xsi:type="LocalVariableDeclarationNode">
                <LocalVariables>
                  <Variable IsStatic="false">
                    <identifier>
                      <Name>nameVar</Name>
                      <Attributes />
                    </identifier>
                    <TypeNode xsi:type="ArrayType">
                      <AbstractTypeNode>
                        <Identifier>
                          <Name>namespace1</Name>
                          <Attributes>
                            <Identifier>
                              <Name>namespace2</Name>
                              <Attributes />
                            </Identifier>
                            <Identifier>
                              <Name>namespace3</Name>
                              <Attributes />
                            </Identifier>
                            <Identifier>
                              <Name>MuClass</Name>
                              <Attributes />
                            </Identifier>
                          </Attributes>
                        </Identifier>
                      </AbstractTypeNode>
                      <MultiDimArrays>
                        <MultiDimArray dimensions="1" />
                        <MultiDimArray dimensions="1" />
                      </MultiDimArrays>
                    </TypeNode>
                    <ExpressionNode xsi:type="ArrayInstantiationNode">
                      <type xsi:type="AbstractTypeNode">
                        <Identifier>
                          <Name>namespace1</Name>
                          <Attributes>
                            <Identifier>
                              <Name>namespace2</Name>
                              <Attributes />
                            </Identifier>
                            <Identifier>
                              <Name>namespace3</Name>
                              <Attributes />
                            </Identifier>
                            <Identifier>
                              <Name>MuClass</Name>
                              <Attributes />
                            </Identifier>
                          </Attributes>
                        </Identifier>
                      </type>
                      <arrayType>
                        <AbstractTypeNode>
                          <Identifier>
                            <Name>namespace1</Name>
                            <Attributes>
                              <Identifier>
                                <Name>namespace2</Name>
                                <Attributes />
                              </Identifier>
                              <Identifier>
                                <Name>namespace3</Name>
                                <Attributes />
                              </Identifier>
                              <Identifier>
                                <Name>MuClass</Name>
                                <Attributes />
                              </Identifier>
                            </Attributes>
                          </Identifier>
                        </AbstractTypeNode>
                        <MultiDimArrays>
                          <MultiDimArray dimensions="1" />
                          <MultiDimArray dimensions="1" />
                        </MultiDimArrays>
                      </arrayType>
                      <initialization>
                        <ArrayInitializers />
                      </initialization>
                    </ExpressionNode>
                  </Variable>
                </LocalVariables>
              </StatementNode>
              <StatementNode xsi:type="LocalVariableDeclarationNode">
                <LocalVariables>
                  <Variable IsStatic="false">
                    <identifier>
                      <Name>nameVar</Name>
                      <Attributes />
                    </identifier>
                    <TypeNode xsi:type="ArrayType">
                      <AbstractTypeNode>
                        <Identifier>
                          <Name>namespace1</Name>
                          <Attributes>
                            <Identifier>
                              <Name>namespace2</Name>
                              <Attributes />
                            </Identifier>
                            <Identifier>
                              <Name>namespace3</Name>
                              <Attributes />
                            </Identifier>
                            <Identifier>
                              <Name>MuClass</Name>
                              <Attributes />
                            </Identifier>
                          </Attributes>
                        </Identifier>
                      </AbstractTypeNode>
                      <MultiDimArrays>
                        <MultiDimArray dimensions="3" />
                      </MultiDimArrays>
                    </TypeNode>
                    <ExpressionNode xsi:type="ArrayInstantiationNode">
                      <type xsi:type="AbstractTypeNode">
                        <Identifier>
                          <Name>namespace1</Name>
                          <Attributes>
                            <Identifier>
                              <Name>namespace2</Name>
                              <Attributes />
                            </Identifier>
                            <Identifier>
                              <Name>namespace3</Name>
                              <Attributes />
                            </Identifier>
                            <Identifier>
                              <Name>MuClass</Name>
                              <Attributes />
                            </Identifier>
                          </Attributes>
                        </Identifier>
                      </type>
                      <arrayType>
                        <AbstractTypeNode>
                          <Identifier>
                            <Name>namespace1</Name>
                            <Attributes>
                              <Identifier>
                                <Name>namespace2</Name>
                                <Attributes />
                              </Identifier>
                              <Identifier>
                                <Name>namespace3</Name>
                                <Attributes />
                              </Identifier>
                              <Identifier>
                                <Name>MuClass</Name>
                                <Attributes />
                              </Identifier>
                            </Attributes>
                          </Identifier>
                        </AbstractTypeNode>
                        <MultiDimArrays>
                          <MultiDimArray dimensions="3" />
                        </MultiDimArrays>
                      </arrayType>
                      <initialization>
                        <ArrayInitializers />
                      </initialization>
                    </ExpressionNode>
                  </Variable>
                </LocalVariables>
              </StatementNode>
              <StatementNode xsi:type="LocalVariableDeclarationNode">
                <LocalVariables>
                  <Variable IsStatic="false">
                    <identifier>
                      <Name>varName2</Name>
                      <Attributes />
                    </identifier>
                    <TypeNode xsi:type="ArrayType">
                      <AbstractTypeNode>
                        <Identifier>
                          <Name>Persona</Name>
                          <Attributes />
                        </Identifier>
                      </AbstractTypeNode>
                      <MultiDimArrays>
                        <MultiDimArray dimensions="1" />
                      </MultiDimArrays>
                    </TypeNode>
                    <ExpressionNode xsi:type="FunctionCallExpressionNode">
                      <identifier xsi:type="IdNode">
                        <Name>createPrenson</Name>
                        <Attributes />
                      </identifier>
                      <arguments>
                        <ArgumentNode>
                          <ExpressionNode xsi:type="LiteralStringNode">
                            <Value>"Carlos"</Value>
                          </ExpressionNode>
                        </ArgumentNode>
                      </arguments>
                    </ExpressionNode>
                  </Variable>
                </LocalVariables>
              </StatementNode>
              <StatementNode xsi:type="StatementExpressionNode">
                <expressionNode xsi:type="AssignExpressionNode">
                  <unaryExpression xsi:type="AccessorNode">
                    <primary xsi:type="IdNode">
                      <Name>varName2</Name>
                      <Attributes />
                    </primary>
                    <identifier>
                      <Name>edad</Name>
                      <Attributes />
                    </identifier>
                  </unaryExpression>
                  <assignType>OP_ASSIGN</assignType>
                  <assignExpression xsi:type="SubExpressionNode">
                    <leftOperand xsi:type="IdNode">
                      <Name>birthy_ear</Name>
                      <Attributes />
                    </leftOperand>
                    <rightOperand xsi:type="IdNode">
                      <Name>current_year</Name>
                      <Attributes />
                    </rightOperand>
                  </assignExpression>
                </expressionNode>
              </StatementNode>
              <StatementNode xsi:type="StatementExpressionNode">
                <expressionNode xsi:type="AssignExpressionNode">
                  <unaryExpression xsi:type="AccessorNode">
                    <primary xsi:type="IdNode">
                      <Name>varName2</Name>
                      <Attributes />
                    </primary>
                    <identifier>
                      <Name>sueldo</Name>
                      <Attributes />
                    </identifier>
                  </unaryExpression>
                  <assignType>OP_ASSIGN_MULTIPLICATION</assignType>
                  <assignExpression xsi:type="LiteralFloatNode">
                    <Value>0</Value>
                  </assignExpression>
                </expressionNode>
              </StatementNode>
              <StatementNode xsi:type="StatementExpressionNode">
                <expressionNode xsi:type="FunctionCallExpressionNode">
                  <identifier xsi:type="AccessorNode">
                    <primary xsi:type="AccessorNode">
                      <primary xsi:type="IdNode">
                        <Name>varName2</Name>
                        <Attributes />
                      </primary>
                      <identifier>
                        <Name>carros</Name>
                        <Attributes />
                      </identifier>
                    </primary>
                    <identifier>
                      <Name>add</Name>
                      <Attributes />
                    </identifier>
                  </identifier>
                  <arguments>
                    <ArgumentNode>
                      <ExpressionNode xsi:type="ClassInstantioationNode">
                        <type xsi:type="AbstractTypeNode">
                          <Identifier>
                            <Name>Ferrarry</Name>
                            <Attributes />
                          </Identifier>
                        </type>
                        <arguments />
                      </ExpressionNode>
                    </ArgumentNode>
                  </arguments>
                </expressionNode>
              </StatementNode>
              <StatementNode xsi:type="LocalVariableDeclarationNode">
                <LocalVariables>
                  <Variable IsStatic="false">
                    <identifier>
                      <Name>que</Name>
                      <Attributes />
                    </identifier>
                    <AbstractTypeNode>
                      <Identifier>
                        <Name>Lol</Name>
                        <Attributes />
                      </Identifier>
                    </AbstractTypeNode>
                    <ExpressionNode xsi:type="ArrayInstantiationNode">
                      <type xsi:type="AbstractTypeNode">
                        <Identifier>
                          <Name>Lol</Name>
                          <Attributes />
                        </Identifier>
                      </type>
                      <primaryExpBrackets>
                        <ExpressionNode xsi:type="LiteralIntNode">
                          <Value>6</Value>
                        </ExpressionNode>
                      </primaryExpBrackets>
                      <arrayType>
                        <AbstractTypeNode>
                          <Identifier>
                            <Name>Lol</Name>
                            <Attributes />
                          </Identifier>
                        </AbstractTypeNode>
                        <MultiDimArrays>
                          <MultiDimArray dimensions="1" />
                        </MultiDimArrays>
                      </arrayType>
                    </ExpressionNode>
                  </Variable>
                </LocalVariables>
              </StatementNode>
              <StatementNode xsi:type="LocalVariableDeclarationNode">
                <LocalVariables>
                  <Variable IsStatic="false">
                    <identifier>
                      <Name>que</Name>
                      <Attributes />
                    </identifier>
                    <AbstractTypeNode>
                      <Identifier>
                        <Name>Lol</Name>
                        <Attributes />
                      </Identifier>
                    </AbstractTypeNode>
                    <ExpressionNode xsi:type="ArrayInstantiationNode">
                      <type xsi:type="AbstractTypeNode">
                        <Identifier>
                          <Name>Lol</Name>
                          <Attributes />
                        </Identifier>
                      </type>
                      <arrayType>
                        <AbstractTypeNode>
                          <Identifier>
                            <Name>Lol</Name>
                            <Attributes />
                          </Identifier>
                        </AbstractTypeNode>
                        <MultiDimArrays>
                          <MultiDimArray dimensions="1" />
                          <MultiDimArray dimensions="1" />
                        </MultiDimArrays>
                      </arrayType>
                      <initialization>
                        <ArrayInitializers />
                      </initialization>
                    </ExpressionNode>
                  </Variable>
                </LocalVariables>
              </StatementNode>
              <StatementNode xsi:type="LocalVariableDeclarationNode">
                <LocalVariables>
                  <Variable IsStatic="false">
                    <identifier>
                      <Name>que</Name>
                      <Attributes />
                    </identifier>
                    <AbstractTypeNode>
                      <Identifier>
                        <Name>Lol</Name>
                        <Attributes />
                      </Identifier>
                    </AbstractTypeNode>
                    <ExpressionNode xsi:type="ArrayInstantiationNode">
                      <type xsi:type="AbstractTypeNode">
                        <Identifier>
                          <Name>Lol</Name>
                          <Attributes />
                        </Identifier>
                      </type>
                      <arrayType>
                        <AbstractTypeNode>
                          <Identifier>
                            <Name>Lol</Name>
                            <Attributes />
                          </Identifier>
                        </AbstractTypeNode>
                        <MultiDimArrays>
                          <MultiDimArray dimensions="4" />
                        </MultiDimArrays>
                      </arrayType>
                      <initialization>
                        <ArrayInitializers />
                      </initialization>
                    </ExpressionNode>
                  </Variable>
                </LocalVariables>
              </StatementNode>
              <StatementNode xsi:type="StatementExpressionNode">
                <expressionNode xsi:type="AssignExpressionNode">
                  <unaryExpression xsi:type="IdNode">
                    <Name>hola</Name>
                    <Attributes />
                  </unaryExpression>
                  <assignType>OP_ASSIGN</assignType>
                  <assignExpression xsi:type="LiteralStringNode">
                    <Value>"adios"</Value>
                  </assignExpression>
                </expressionNode>
              </StatementNode>
              <StatementNode xsi:type="StatementExpressionNode">
                <expressionNode xsi:type="AssignExpressionNode">
                  <unaryExpression xsi:type="ArrayAccessExpressionNode">
                    <identifier xsi:type="IdNode">
                      <Name>hola</Name>
                      <Attributes />
                    </identifier>
                    <arrayAccessList>
                      <ArrayOfExpressionNode>
                        <ExpressionNode xsi:type="LiteralIntNode">
                          <Value>2</Value>
                        </ExpressionNode>
                      </ArrayOfExpressionNode>
                    </arrayAccessList>
                  </unaryExpression>
                  <assignType>OP_ASSIGN</assignType>
                  <assignExpression xsi:type="LiteralStringNode">
                    <Value>"adios"</Value>
                  </assignExpression>
                </expressionNode>
              </StatementNode>
              <StatementNode xsi:type="StatementExpressionNode">
                <expressionNode xsi:type="FunctionCallExpressionNode">
                  <identifier xsi:type="AccessorNode">
                    <primary xsi:type="IdNode">
                      <Name>Console</Name>
                      <Attributes />
                    </primary>
                    <identifier>
                      <Name>WriteLine</Name>
                      <Attributes />
                    </identifier>
                  </identifier>
                  <arguments>
                    <ArgumentNode>
                      <ExpressionNode xsi:type="LiteralStringNode">
                        <Value>"Hello!"</Value>
                      </ExpressionNode>
                    </ArgumentNode>
                  </arguments>
                </expressionNode>
              </StatementNode>
              <StatementNode xsi:type="StatementExpressionNode">
                <expressionNode xsi:type="AssignExpressionNode">
                  <unaryExpression xsi:type="ArrayAccessExpressionNode">
                    <identifier xsi:type="AccessorNode">
                      <primary xsi:type="AccessorNode">
                        <primary xsi:type="AccessorNode">
                          <primary xsi:type="IdNode">
                            <Name>namespace1</Name>
                            <Attributes />
                          </primary>
                          <identifier>
                            <Name>namespace2</Name>
                            <Attributes />
                          </identifier>
                        </primary>
                        <identifier>
                          <Name>namespace3</Name>
                          <Attributes />
                        </identifier>
                      </primary>
                      <identifier>
                        <Name>MuClass</Name>
                        <Attributes />
                      </identifier>
                    </identifier>
                    <arrayAccessList>
                      <ArrayOfExpressionNode>
                        <ExpressionNode xsi:type="LiteralIntNode">
                          <Value>0</Value>
                        </ExpressionNode>
                      </ArrayOfExpressionNode>
                    </arrayAccessList>
                  </unaryExpression>
                  <assignType>OP_ASSIGN</assignType>
                  <assignExpression xsi:type="LiteralStringNode">
                    <Value>"Ing."</Value>
                  </assignExpression>
                </expressionNode>
              </StatementNode>
              <StatementNode xsi:type="StatementExpressionNode">
                <expressionNode xsi:type="AssignExpressionNode">
                  <unaryExpression xsi:type="ArrayAccessExpressionNode">
                    <identifier xsi:type="AccessorNode">
                      <primary xsi:type="AccessorNode">
                        <primary xsi:type="IdNode">
                          <Name>namespace1</Name>
                          <Attributes />
                        </primary>
                        <identifier>
                          <Name>namespace2</Name>
                          <Attributes />
                        </identifier>
                      </primary>
                      <identifier>
                        <Name>MuClass</Name>
                        <Attributes />
                      </identifier>
                    </identifier>
                    <arrayAccessList>
                      <ArrayOfExpressionNode>
                        <ExpressionNode xsi:type="LiteralIntNode">
                          <Value>1</Value>
                        </ExpressionNode>
                      </ArrayOfExpressionNode>
                    </arrayAccessList>
                  </unaryExpression>
                  <assignType>OP_ASSIGN</assignType>
                  <assignExpression xsi:type="LiteralStringNode">
                    <Value>"no"</Value>
                  </assignExpression>
                </expressionNode>
              </StatementNode>
              <StatementNode xsi:type="StatementExpressionNode">
                <expressionNode xsi:type="AssignExpressionNode">
                  <unaryExpression xsi:type="ArrayAccessExpressionNode">
                    <identifier xsi:type="AccessorNode">
                      <primary xsi:type="IdNode">
                        <Name>namespace1</Name>
                        <Attributes />
                      </primary>
                      <identifier>
                        <Name>MuClass</Name>
                        <Attributes />
                      </identifier>
                    </identifier>
                    <arrayAccessList>
                      <ArrayOfExpressionNode>
                        <ExpressionNode xsi:type="LiteralIntNode">
                          <Value>2</Value>
                        </ExpressionNode>
                      </ArrayOfExpressionNode>
                    </arrayAccessList>
                  </unaryExpression>
                  <assignType>OP_ASSIGN</assignType>
                  <assignExpression xsi:type="LiteralStringNode">
                    <Value>"nos"</Value>
                  </assignExpression>
                </expressionNode>
              </StatementNode>
              <StatementNode xsi:type="StatementExpressionNode">
                <expressionNode xsi:type="AssignExpressionNode">
                  <unaryExpression xsi:type="ArrayAccessExpressionNode">
                    <identifier xsi:type="AccessorNode">
                      <primary xsi:type="AccessorNode">
                        <primary xsi:type="IdNode">
                          <Name>namespace1</Name>
                          <Attributes />
                        </primary>
                        <identifier>
                          <Name>namespace2</Name>
                          <Attributes />
                        </identifier>
                      </primary>
                      <identifier>
                        <Name>MuClass</Name>
                        <Attributes />
                      </identifier>
                    </identifier>
                    <arrayAccessList>
                      <ArrayOfExpressionNode>
                        <ExpressionNode xsi:type="LiteralIntNode">
                          <Value>3</Value>
                        </ExpressionNode>
                      </ArrayOfExpressionNode>
                    </arrayAccessList>
                  </unaryExpression>
                  <assignType>OP_ASSIGN</assignType>
                  <assignExpression xsi:type="LiteralStringNode">
                    <Value>"viole"</Value>
                  </assignExpression>
                </expressionNode>
              </StatementNode>
              <StatementNode xsi:type="StatementExpressionNode">
                <expressionNode xsi:type="AssignExpressionNode">
                  <unaryExpression xsi:type="ArrayAccessExpressionNode">
                    <identifier xsi:type="AccessorNode">
                      <primary xsi:type="AccessorNode">
                        <primary xsi:type="AccessorNode">
                          <primary xsi:type="IdNode">
                            <Name>namespace1</Name>
                            <Attributes />
                          </primary>
                          <identifier>
                            <Name>namespace2</Name>
                            <Attributes />
                          </identifier>
                        </primary>
                        <identifier>
                          <Name>namespace3</Name>
                          <Attributes />
                        </identifier>
                      </primary>
                      <identifier>
                        <Name>MuClass</Name>
                        <Attributes />
                      </identifier>
                    </identifier>
                    <arrayAccessList>
                      <ArrayOfExpressionNode>
                        <ExpressionNode xsi:type="LiteralIntNode">
                          <Value>4</Value>
                        </ExpressionNode>
                      </ArrayOfExpressionNode>
                    </arrayAccessList>
                  </unaryExpression>
                  <assignType>OP_ASSIGN</assignType>
                  <assignExpression xsi:type="LiteralStringNode">
                    <Value>"plox"</Value>
                  </assignExpression>
                </expressionNode>
              </StatementNode>
              <StatementNode xsi:type="StatementExpressionNode">
                <expressionNode xsi:type="AssignExpressionNode">
                  <unaryExpression xsi:type="ArrayAccessExpressionNode">
                    <identifier xsi:type="AccessorNode">
                      <primary xsi:type="AccessorNode">
                        <primary xsi:type="AccessorNode">
                          <primary xsi:type="IdNode">
                            <Name>namespace1</Name>
                            <Attributes />
                          </primary>
                          <identifier>
                            <Name>namespace2</Name>
                            <Attributes />
                          </identifier>
                        </primary>
                        <identifier>
                          <Name>namespace3</Name>
                          <Attributes />
                        </identifier>
                      </primary>
                      <identifier>
                        <Name>MuClass</Name>
                        <Attributes />
                      </identifier>
                    </identifier>
                    <arrayAccessList>
                      <ArrayOfExpressionNode>
                        <ExpressionNode xsi:type="LiteralIntNode">
                          <Value>5</Value>
                        </ExpressionNode>
                      </ArrayOfExpressionNode>
                    </arrayAccessList>
                  </unaryExpression>
                  <assignType>OP_ASSIGN</assignType>
                  <assignExpression xsi:type="LiteralStringNode">
                    <Value>"plox X2"</Value>
                  </assignExpression>
                </expressionNode>
              </StatementNode>
              <StatementNode xsi:type="LocalVariableDeclarationNode">
                <LocalVariables>
                  <Variable IsStatic="false">
                    <identifier>
                      <Name>THREE</Name>
                      <Attributes />
                    </identifier>
                    <PrimitiveTypeNode type="RW_INT" />
                    <ExpressionNode xsi:type="LiteralIntNode">
                      <Value>3</Value>
                    </ExpressionNode>
                  </Variable>
                  <Variable IsStatic="false">
                    <identifier>
                      <Name>FOUR</Name>
                      <Attributes />
                    </identifier>
                    <PrimitiveTypeNode type="RW_INT" />
                    <ExpressionNode xsi:type="LiteralIntNode">
                      <Value>4</Value>
                    </ExpressionNode>
                  </Variable>
                </LocalVariables>
              </StatementNode>
              <StatementNode xsi:type="LocalVariableDeclarationNode">
                <LocalVariables>
                  <Variable IsStatic="false">
                    <identifier>
                      <Name>rangos</Name>
                      <Attributes />
                    </identifier>
                    <TypeNode xsi:type="ArrayType">
                      <PrimitiveTypeNode type="RW_FLOAT" />
                      <MultiDimArrays>
                        <MultiDimArray dimensions="1" />
                      </MultiDimArrays>
                    </TypeNode>
                    <ExpressionNode xsi:type="ArrayInstantiationNode">
                      <type xsi:type="PrimitiveTypeNode" type="RW_FLOAT" />
                      <primaryExpBrackets>
                        <ExpressionNode xsi:type="LiteralIntNode">
                          <Value>5</Value>
                        </ExpressionNode>
                      </primaryExpBrackets>
                      <arrayType>
                        <PrimitiveTypeNode type="RW_FLOAT" />
                        <MultiDimArrays />
                      </arrayType>
                    </ExpressionNode>
                  </Variable>
                </LocalVariables>
              </StatementNode>
              <StatementNode xsi:type="StatementExpressionNode">
                <expressionNode xsi:type="AssignExpressionNode">
                  <unaryExpression xsi:type="ArrayAccessExpressionNode">
                    <identifier xsi:type="IdNode">
                      <Name>rangos</Name>
                      <Attributes />
                    </identifier>
                    <arrayAccessList>
                      <ArrayOfExpressionNode>
                        <ExpressionNode xsi:type="LiteralIntNode">
                          <Value>0</Value>
                        </ExpressionNode>
                      </ArrayOfExpressionNode>
                    </arrayAccessList>
                  </unaryExpression>
                  <assignType>OP_ASSIGN</assignType>
                  <assignExpression xsi:type="LiteralFloatNode">
                    <Value>0</Value>
                  </assignExpression>
                </expressionNode>
              </StatementNode>
              <StatementNode xsi:type="StatementExpressionNode">
                <expressionNode xsi:type="AssignExpressionNode">
                  <unaryExpression xsi:type="ArrayAccessExpressionNode">
                    <identifier xsi:type="IdNode">
                      <Name>rangos</Name>
                      <Attributes />
                    </identifier>
                    <arrayAccessList>
                      <ArrayOfExpressionNode>
                        <ExpressionNode xsi:type="LiteralIntNode">
                          <Value>1</Value>
                        </ExpressionNode>
                      </ArrayOfExpressionNode>
                    </arrayAccessList>
                  </unaryExpression>
                  <assignType>OP_ASSIGN</assignType>
                  <assignExpression xsi:type="LiteralFloatNode">
                    <Value>0</Value>
                  </assignExpression>
                </expressionNode>
              </StatementNode>
              <StatementNode xsi:type="StatementExpressionNode">
                <expressionNode xsi:type="AssignExpressionNode">
                  <unaryExpression xsi:type="ArrayAccessExpressionNode">
                    <identifier xsi:type="IdNode">
                      <Name>rangos</Name>
                      <Attributes />
                    </identifier>
                    <arrayAccessList>
                      <ArrayOfExpressionNode>
                        <ExpressionNode xsi:type="LiteralIntNode">
                          <Value>2</Value>
                        </ExpressionNode>
                      </ArrayOfExpressionNode>
                    </arrayAccessList>
                  </unaryExpression>
                  <assignType>OP_ASSIGN</assignType>
                  <assignExpression xsi:type="CastingExpressionNode">
                    <targetCastType xsi:type="PrimitiveTypeNode" type="RW_FLOAT" />
                    <exp xsi:type="LiteralIntNode">
                      <Value>9</Value>
                    </exp>
                  </assignExpression>
                </expressionNode>
              </StatementNode>
              <StatementNode xsi:type="StatementExpressionNode">
                <expressionNode xsi:type="AssignExpressionNode">
                  <unaryExpression xsi:type="ArrayAccessExpressionNode">
                    <identifier xsi:type="IdNode">
                      <Name>rangos</Name>
                      <Attributes />
                    </identifier>
                    <arrayAccessList>
                      <ArrayOfExpressionNode>
                        <ExpressionNode xsi:type="LiteralIntNode">
                          <Value>3</Value>
                        </ExpressionNode>
                      </ArrayOfExpressionNode>
                    </arrayAccessList>
                  </unaryExpression>
                  <assignType>OP_ASSIGN</assignType>
                  <assignExpression xsi:type="LiteralFloatNode">
                    <Value>0</Value>
                  </assignExpression>
                </expressionNode>
              </StatementNode>
              <StatementNode xsi:type="StatementExpressionNode">
                <expressionNode xsi:type="AssignExpressionNode">
                  <unaryExpression xsi:type="ArrayAccessExpressionNode">
                    <identifier xsi:type="IdNode">
                      <Name>rangos</Name>
                      <Attributes />
                    </identifier>
                    <arrayAccessList>
                      <ArrayOfExpressionNode>
                        <ExpressionNode xsi:type="IdNode">
                          <Name>FOUR</Name>
                          <Attributes />
                        </ExpressionNode>
                      </ArrayOfExpressionNode>
                    </arrayAccessList>
                  </unaryExpression>
                  <assignType>OP_ASSIGN</assignType>
                  <assignExpression xsi:type="CastingExpressionNode">
                    <targetCastType xsi:type="PrimitiveTypeNode" type="RW_FLOAT" />
                    <exp xsi:type="LiteralIntNode">
                      <Value>200</Value>
                    </exp>
                  </assignExpression>
                </expressionNode>
              </StatementNode>
              <StatementNode xsi:type="StatementExpressionNode">
                <expressionNode xsi:type="AssignExpressionNode">
                  <unaryExpression xsi:type="AccessorNode">
                    <primary xsi:type="ThisReferenceAccsessNode" />
                    <identifier>
                      <Name>myField</Name>
                      <Attributes />
                    </identifier>
                  </unaryExpression>
                  <assignType>OP_ASSIGN</assignType>
                  <assignExpression xsi:type="ClassInstantioationNode">
                    <type xsi:type="AbstractTypeNode">
                      <Identifier>
                        <Name>Fielded</Name>
                        <Attributes />
                      </Identifier>
                    </type>
                    <arguments>
                      <ArgumentNode>
                        <ExpressionNode xsi:type="IdNode">
                          <Name>otroParam</Name>
                          <Attributes />
                        </ExpressionNode>
                      </ArgumentNode>
                    </arguments>
                  </assignExpression>
                </expressionNode>
              </StatementNode>
              <StatementNode xsi:type="StatementExpressionNode">
                <expressionNode xsi:type="AssignExpressionNode">
                  <unaryExpression xsi:type="ArrayAccessExpressionNode">
                    <identifier xsi:type="AccessorNode">
                      <primary xsi:type="ThisReferenceAccsessNode" />
                      <identifier>
                        <Name>myField2</Name>
                        <Attributes />
                      </identifier>
                    </identifier>
                    <arrayAccessList>
                      <ArrayOfExpressionNode>
                        <ExpressionNode xsi:type="IdNode">
                          <Name>THREE</Name>
                          <Attributes />
                        </ExpressionNode>
                      </ArrayOfExpressionNode>
                    </arrayAccessList>
                  </unaryExpression>
                  <assignType>OP_ASSIGN</assignType>
                  <assignExpression xsi:type="ClassInstantioationNode">
                    <type xsi:type="AbstractTypeNode">
                      <Identifier>
                        <Name>Fielded</Name>
                        <Attributes />
                      </Identifier>
                    </type>
                    <arguments>
                      <ArgumentNode>
                        <ExpressionNode xsi:type="IdNode">
                          <Name>otroParam</Name>
                          <Attributes />
                        </ExpressionNode>
                      </ArgumentNode>
                    </arguments>
                  </assignExpression>
                </expressionNode>
              </StatementNode>
              <StatementNode xsi:type="StatementExpressionNode">
                <expressionNode xsi:type="AssignExpressionNode">
                  <unaryExpression xsi:type="ArrayAccessExpressionNode">
                    <identifier xsi:type="AccessorNode">
                      <primary xsi:type="AccessorNode">
                        <primary xsi:type="AccessorNode">
                          <primary xsi:type="ThisReferenceAccsessNode" />
                          <identifier>
                            <Name>myField3</Name>
                            <Attributes />
                          </identifier>
                        </primary>
                        <identifier>
                          <Name>id1</Name>
                          <Attributes />
                        </identifier>
                      </primary>
                      <identifier>
                        <Name>id2</Name>
                        <Attributes />
                      </identifier>
                    </identifier>
                    <arrayAccessList>
                      <ArrayOfExpressionNode>
                        <ExpressionNode xsi:type="IdNode">
                          <Name>THREE</Name>
                          <Attributes />
                        </ExpressionNode>
                      </ArrayOfExpressionNode>
                    </arrayAccessList>
                  </unaryExpression>
                  <assignType>OP_ASSIGN</assignType>
                  <assignExpression xsi:type="ClassInstantioationNode">
                    <type xsi:type="AbstractTypeNode">
                      <Identifier>
                        <Name>Fielded</Name>
                        <Attributes />
                      </Identifier>
                    </type>
                    <arguments>
                      <ArgumentNode>
                        <ExpressionNode xsi:type="IdNode">
                          <Name>otroParam</Name>
                          <Attributes />
                        </ExpressionNode>
                      </ArgumentNode>
                    </arguments>
                  </assignExpression>
                </expressionNode>
              </StatementNode>
              <StatementNode xsi:type="StatementExpressionNode">
                <expressionNode xsi:type="AssignExpressionNode">
                  <unaryExpression xsi:type="AccessorNode">
                    <primary xsi:type="AccessorNode">
                      <primary xsi:type="ThisReferenceAccsessNode" />
                      <identifier>
                        <Name>myField3</Name>
                        <Attributes />
                      </identifier>
                    </primary>
                    <identifier>
                      <Name>id1</Name>
                      <Attributes />
                    </identifier>
                  </unaryExpression>
                  <assignType>OP_ASSIGN</assignType>
                  <assignExpression xsi:type="ClassInstantioationNode">
                    <type xsi:type="AbstractTypeNode">
                      <Identifier>
                        <Name>ID1</Name>
                        <Attributes />
                      </Identifier>
                    </type>
                    <arguments>
                      <ArgumentNode>
                        <ExpressionNode xsi:type="IdNode">
                          <Name>otroParam</Name>
                          <Attributes />
                        </ExpressionNode>
                      </ArgumentNode>
                      <ArgumentNode>
                        <ExpressionNode xsi:type="IdNode">
                          <Name>otroParam2</Name>
                          <Attributes />
                        </ExpressionNode>
                      </ArgumentNode>
                      <ArgumentNode>
                        <ExpressionNode xsi:type="IdNode">
                          <Name>otroParam3</Name>
                          <Attributes />
                        </ExpressionNode>
                      </ArgumentNode>
                    </arguments>
                  </assignExpression>
                </expressionNode>
              </StatementNode>
              <StatementNode xsi:type="LocalVariableDeclarationNode">
                <LocalVariables>
                  <Variable IsStatic="false">
                    <identifier>
                      <Name>nombres1</Name>
                      <Attributes />
                    </identifier>
                    <TypeNode xsi:type="ArrayType">
                      <PrimitiveTypeNode type="RW_STRING" />
                      <MultiDimArrays>
                        <MultiDimArray dimensions="1" />
                      </MultiDimArrays>
                    </TypeNode>
                    <ExpressionNode xsi:type="ArrayInstantiationNode">
                      <type xsi:type="AbstractTypeNode">
                        <Identifier>
                          <Name>namespace1</Name>
                          <Attributes>
                            <Identifier>
                              <Name>MyBool</Name>
                              <Attributes />
                            </Identifier>
                          </Attributes>
                        </Identifier>
                      </type>
                      <primaryExpBrackets>
                        <ExpressionNode xsi:type="FunctionCallExpressionNode">
                          <identifier xsi:type="IdNode">
                            <Name>getSize</Name>
                            <Attributes />
                          </identifier>
                          <arguments />
                        </ExpressionNode>
                      </primaryExpBrackets>
                      <arrayType>
                        <AbstractTypeNode>
                          <Identifier>
                            <Name>namespace1</Name>
                            <Attributes>
                              <Identifier>
                                <Name>MyBool</Name>
                                <Attributes />
                              </Identifier>
                            </Attributes>
                          </Identifier>
                        </AbstractTypeNode>
                        <MultiDimArrays />
                      </arrayType>
                    </ExpressionNode>
                  </Variable>
                </LocalVariables>
              </StatementNode>
              <StatementNode xsi:type="LocalVariableDeclarationNode">
                <LocalVariables>
                  <Variable IsStatic="false">
                    <identifier>
                      <Name>nombres2</Name>
                      <Attributes />
                    </identifier>
                    <TypeNode xsi:type="ArrayType">
                      <PrimitiveTypeNode type="RW_STRING" />
                      <MultiDimArrays>
                        <MultiDimArray dimensions="1" />
                      </MultiDimArrays>
                    </TypeNode>
                    <ExpressionNode xsi:type="ArrayInstantiationNode">
                      <type xsi:type="AbstractTypeNode">
                        <Identifier>
                          <Name>namespace1</Name>
                          <Attributes>
                            <Identifier>
                              <Name>MyBool</Name>
                              <Attributes />
                            </Identifier>
                          </Attributes>
                        </Identifier>
                      </type>
                      <primaryExpBrackets>
                        <ExpressionNode xsi:type="FunctionCallExpressionNode">
                          <identifier xsi:type="AccessorNode">
                            <primary xsi:type="ThisReferenceAccsessNode" />
                            <identifier>
                              <Name>getSize</Name>
                              <Attributes />
                            </identifier>
                          </identifier>
                          <arguments />
                        </ExpressionNode>
                      </primaryExpBrackets>
                      <arrayType>
                        <AbstractTypeNode>
                          <Identifier>
                            <Name>namespace1</Name>
                            <Attributes>
                              <Identifier>
                                <Name>MyBool</Name>
                                <Attributes />
                              </Identifier>
                            </Attributes>
                          </Identifier>
                        </AbstractTypeNode>
                        <MultiDimArrays />
                      </arrayType>
                    </ExpressionNode>
                  </Variable>
                </LocalVariables>
              </StatementNode>
              <StatementNode xsi:type="LocalVariableDeclarationNode">
                <LocalVariables>
                  <Variable IsStatic="false">
                    <identifier>
                      <Name>nombres2</Name>
                      <Attributes />
                    </identifier>
                    <TypeNode xsi:type="ArrayType">
                      <PrimitiveTypeNode type="RW_STRING" />
                      <MultiDimArrays>
                        <MultiDimArray dimensions="1" />
                      </MultiDimArrays>
                    </TypeNode>
                    <ExpressionNode xsi:type="ArrayInstantiationNode">
                      <type xsi:type="AbstractTypeNode">
                        <Identifier>
                          <Name>namespace1</Name>
                          <Attributes>
                            <Identifier>
                              <Name>MyBool</Name>
                              <Attributes />
                            </Identifier>
                          </Attributes>
                        </Identifier>
                      </type>
                      <primaryExpBrackets>
                        <ExpressionNode xsi:type="TernaryExpressionNode">
                          <conditionalExpression xsi:type="GroupedExpressionNode">
                            <expression xsi:type="GreaterThanExpressionNode">
                              <leftExpression xsi:type="AccessorNode">
                                <primary xsi:type="IdNode">
                                  <Name>Numbers</Name>
                                  <Attributes />
                                </primary>
                                <identifier>
                                  <Name>Count</Name>
                                  <Attributes />
                                </identifier>
                              </leftExpression>
                              <shiftExpression xsi:type="LiteralIntNode">
                                <Value>3</Value>
                              </shiftExpression>
                            </expression>
                          </conditionalExpression>
                          <trueExpression xsi:type="LiteralIntNode">
                            <Value>8</Value>
                          </trueExpression>
                          <falseExpression xsi:type="LiteralIntNode">
                            <Value>3</Value>
                          </falseExpression>
                        </ExpressionNode>
                      </primaryExpBrackets>
                      <arrayType>
                        <AbstractTypeNode>
                          <Identifier>
                            <Name>namespace1</Name>
                            <Attributes>
                              <Identifier>
                                <Name>MyBool</Name>
                                <Attributes />
                              </Identifier>
                            </Attributes>
                          </Identifier>
                        </AbstractTypeNode>
                        <MultiDimArrays />
                      </arrayType>
                    </ExpressionNode>
                  </Variable>
                </LocalVariables>
              </StatementNode>
              <StatementNode xsi:type="StatementExpressionNode">
                <expressionNode xsi:type="AssignExpressionNode">
                  <unaryExpression xsi:type="ArrayAccessExpressionNode">
                    <identifier xsi:type="IdNode">
                      <Name>nombres1</Name>
                      <Attributes />
                    </identifier>
                    <arrayAccessList>
                      <ArrayOfExpressionNode>
                        <ExpressionNode xsi:type="SubExpressionNode">
                          <leftOperand xsi:type="FunctionCallExpressionNode">
                            <identifier xsi:type="IdNode">
                              <Name>getSize</Name>
                              <Attributes />
                            </identifier>
                            <arguments />
                          </leftOperand>
                          <rightOperand xsi:type="LiteralIntNode">
                            <Value>1</Value>
                          </rightOperand>
                        </ExpressionNode>
                      </ArrayOfExpressionNode>
                    </arrayAccessList>
                  </unaryExpression>
                  <assignType>OP_ASSIGN</assignType>
                  <assignExpression xsi:type="LiteralStringNode">
                    <Value>"Imposible"</Value>
                  </assignExpression>
                </expressionNode>
              </StatementNode>
              <StatementNode xsi:type="StatementExpressionNode">
                <expressionNode xsi:type="AssignExpressionNode">
                  <unaryExpression xsi:type="ArrayAccessExpressionNode">
                    <identifier xsi:type="IdNode">
                      <Name>nombres1</Name>
                      <Attributes />
                    </identifier>
                    <arrayAccessList>
                      <ArrayOfExpressionNode>
                        <ExpressionNode xsi:type="SubExpressionNode">
                          <leftOperand xsi:type="FunctionCallExpressionNode">
                            <identifier xsi:type="AccessorNode">
                              <primary xsi:type="ThisReferenceAccsessNode" />
                              <identifier>
                                <Name>getSize</Name>
                                <Attributes />
                              </identifier>
                            </identifier>
                            <arguments />
                          </leftOperand>
                          <rightOperand xsi:type="LiteralIntNode">
                            <Value>1</Value>
                          </rightOperand>
                        </ExpressionNode>
                      </ArrayOfExpressionNode>
                    </arrayAccessList>
                  </unaryExpression>
                  <assignType>OP_ASSIGN</assignType>
                  <assignExpression xsi:type="LiteralStringNode">
                    <Value>"Thing"</Value>
                  </assignExpression>
                </expressionNode>
              </StatementNode>
              <StatementNode xsi:type="StatementExpressionNode">
                <expressionNode xsi:type="AssignExpressionNode">
                  <unaryExpression xsi:type="ArrayAccessExpressionNode">
                    <identifier xsi:type="IdNode">
                      <Name>nombres1</Name>
                      <Attributes />
                    </identifier>
                    <arrayAccessList>
                      <ArrayOfExpressionNode>
                        <ExpressionNode xsi:type="TernaryExpressionNode">
                          <conditionalExpression xsi:type="GroupedExpressionNode">
                            <expression xsi:type="GreaterThanExpressionNode">
                              <leftExpression xsi:type="AccessorNode">
                                <primary xsi:type="IdNode">
                                  <Name>Numbers</Name>
                                  <Attributes />
                                </primary>
                                <identifier>
                                  <Name>Count</Name>
                                  <Attributes />
                                </identifier>
                              </leftExpression>
                              <shiftExpression xsi:type="LiteralIntNode">
                                <Value>3</Value>
                              </shiftExpression>
                            </expression>
                          </conditionalExpression>
                          <trueExpression xsi:type="LiteralIntNode">
                            <Value>8</Value>
                          </trueExpression>
                          <falseExpression xsi:type="LiteralIntNode">
                            <Value>3</Value>
                          </falseExpression>
                        </ExpressionNode>
                      </ArrayOfExpressionNode>
                    </arrayAccessList>
                  </unaryExpression>
                  <assignType>OP_ASSIGN</assignType>
                  <assignExpression xsi:type="LiteralStringNode">
                    <Value>"Last"</Value>
                  </assignExpression>
                </expressionNode>
              </StatementNode>
              <StatementNode xsi:type="StatementExpressionNode">
                <expressionNode xsi:type="AssignExpressionNode">
                  <unaryExpression xsi:type="ArrayAccessExpressionNode">
                    <identifier xsi:type="AccessorNode">
                      <primary xsi:type="IdNode">
                        <Name>namespace1</Name>
                        <Attributes />
                      </primary>
                      <identifier>
                        <Name>MyBool</Name>
                        <Attributes />
                      </identifier>
                    </identifier>
                    <arrayAccessList>
                      <ArrayOfExpressionNode>
                        <ExpressionNode xsi:type="AssignExpressionNode">
                          <unaryExpression xsi:type="IdNode">
                            <Name>size</Name>
                            <Attributes />
                          </unaryExpression>
                          <assignType>OP_ASSIGN_MULTIPLICATION</assignType>
                          <assignExpression xsi:type="LiteralIntNode">
                            <Value>3</Value>
                          </assignExpression>
                        </ExpressionNode>
                      </ArrayOfExpressionNode>
                    </arrayAccessList>
                  </unaryExpression>
                  <assignType>OP_ASSIGN</assignType>
                  <assignExpression xsi:type="IdNode">
                    <Name>value1</Name>
                    <Attributes />
                  </assignExpression>
                </expressionNode>
              </StatementNode>
              <StatementNode xsi:type="StatementExpressionNode">
                <expressionNode xsi:type="AssignExpressionNode">
                  <unaryExpression xsi:type="ArrayAccessExpressionNode">
                    <identifier xsi:type="AccessorNode">
                      <primary xsi:type="IdNode">
                        <Name>namespace1</Name>
                        <Attributes />
                      </primary>
                      <identifier>
                        <Name>MyBool</Name>
                        <Attributes />
                      </identifier>
                    </identifier>
                    <arrayAccessList>
                      <ArrayOfExpressionNode>
                        <ExpressionNode xsi:type="AssignExpressionNode">
                          <unaryExpression xsi:type="IdNode">
                            <Name>size</Name>
                            <Attributes />
                          </unaryExpression>
                          <assignType>OP_ASSIGN_SUM</assignType>
                          <assignExpression xsi:type="LiteralIntNode">
                            <Value>3</Value>
                          </assignExpression>
                        </ExpressionNode>
                      </ArrayOfExpressionNode>
                    </arrayAccessList>
                  </unaryExpression>
                  <assignType>OP_ASSIGN</assignType>
                  <assignExpression xsi:type="IdNode">
                    <Name>value2</Name>
                    <Attributes />
                  </assignExpression>
                </expressionNode>
              </StatementNode>
              <StatementNode xsi:type="StatementExpressionNode">
                <expressionNode xsi:type="AssignExpressionNode">
                  <unaryExpression xsi:type="ArrayAccessExpressionNode">
                    <identifier xsi:type="AccessorNode">
                      <primary xsi:type="IdNode">
                        <Name>namespace1</Name>
                        <Attributes />
                      </primary>
                      <identifier>
                        <Name>MyBool</Name>
                        <Attributes />
                      </identifier>
                    </identifier>
                    <arrayAccessList>
                      <ArrayOfExpressionNode>
                        <ExpressionNode xsi:type="TernaryExpressionNode">
                          <conditionalExpression xsi:type="GroupedExpressionNode">
                            <expression xsi:type="GreaterThanExpressionNode">
                              <leftExpression xsi:type="GroupedExpressionNode">
                                <expression xsi:type="AssignExpressionNode">
                                  <unaryExpression xsi:type="IdNode">
                                    <Name>size</Name>
                                    <Attributes />
                                  </unaryExpression>
                                  <assignType>OP_ASSIGN_SUBSTRACT</assignType>
                                  <assignExpression xsi:type="LiteralIntNode">
                                    <Value>3</Value>
                                  </assignExpression>
                                </expression>
                              </leftExpression>
                              <shiftExpression xsi:type="LiteralIntNode">
                                <Value>0</Value>
                              </shiftExpression>
                            </expression>
                          </conditionalExpression>
                          <trueExpression xsi:type="IdNode">
                            <Name>size</Name>
                            <Attributes />
                          </trueExpression>
                          <falseExpression xsi:type="LiteralIntNode">
                            <Value>0</Value>
                          </falseExpression>
                        </ExpressionNode>
                      </ArrayOfExpressionNode>
                    </arrayAccessList>
                  </unaryExpression>
                  <assignType>OP_ASSIGN</assignType>
                  <assignExpression xsi:type="IdNode">
                    <Name>value3</Name>
                    <Attributes />
                  </assignExpression>
                </expressionNode>
              </StatementNode>
              <StatementNode xsi:type="LocalVariableDeclarationNode">
                <LocalVariables>
                  <Variable IsStatic="false">
                    <identifier>
                      <Name>size</Name>
                      <Attributes />
                    </identifier>
                    <PrimitiveTypeNode type="RW_INT" />
                    <ExpressionNode xsi:type="LiteralIntNode">
                      <Value>5</Value>
                    </ExpressionNode>
                  </Variable>
                </LocalVariables>
              </StatementNode>
              <StatementNode xsi:type="LocalVariableDeclarationNode">
                <LocalVariables>
                  <Variable IsStatic="false">
                    <identifier>
                      <Name>val</Name>
                      <Attributes />
                    </identifier>
                    <TypeNode xsi:type="ArrayType">
                      <PrimitiveTypeNode type="RW_FLOAT" />
                      <MultiDimArrays>
                        <MultiDimArray dimensions="1" />
                      </MultiDimArrays>
                    </TypeNode>
                    <ExpressionNode xsi:type="ArrayInstantiationNode">
                      <type xsi:type="PrimitiveTypeNode" type="RW_FLOAT" />
                      <primaryExpBrackets>
                        <ExpressionNode xsi:type="LiteralIntNode">
                          <Value>8</Value>
                        </ExpressionNode>
                      </primaryExpBrackets>
                      <arrayType>
                        <PrimitiveTypeNode type="RW_FLOAT" />
                        <MultiDimArrays />
                      </arrayType>
                    </ExpressionNode>
                  </Variable>
                </LocalVariables>
              </StatementNode>
              <StatementNode xsi:type="StatementExpressionNode">
                <expressionNode xsi:type="AssignExpressionNode">
                  <unaryExpression xsi:type="ArrayAccessExpressionNode">
                    <identifier xsi:type="IdNode">
                      <Name>val</Name>
                      <Attributes />
                    </identifier>
                    <arrayAccessList>
                      <ArrayOfExpressionNode>
                        <ExpressionNode xsi:type="AssignExpressionNode">
                          <unaryExpression xsi:type="IdNode">
                            <Name>size</Name>
                            <Attributes />
                          </unaryExpression>
                          <assignType>OP_ASSIGN_MULTIPLICATION</assignType>
                          <assignExpression xsi:type="LiteralIntNode">
                            <Value>3</Value>
                          </assignExpression>
                        </ExpressionNode>
                      </ArrayOfExpressionNode>
                    </arrayAccessList>
                  </unaryExpression>
                  <assignType>OP_ASSIGN</assignType>
                  <assignExpression xsi:type="CastingExpressionNode">
                    <targetCastType xsi:type="PrimitiveTypeNode" type="RW_FLOAT" />
                    <exp xsi:type="LiteralFloatNode">
                      <Value>0</Value>
                    </exp>
                  </assignExpression>
                </expressionNode>
              </StatementNode>
            </statements>
          </statemetBlock>
        </Method>
        <Method>
          <encapsulation type="RW_PRIVATE" />
          <Modifier type="RW_STATIC" />
          <methodHeaderNode>
            <returnType>
              <ArrayType>
                <AbstractTypeNode>
                  <Identifier>
                    <Name>TokenType</Name>
                    <Attributes />
                  </Identifier>
                </AbstractTypeNode>
                <MultiDimArrays>
                  <MultiDimArray dimensions="1" />
                </MultiDimArrays>
              </ArrayType>
              <IsVoid>false</IsVoid>
            </returnType>
            <Identifier>
              <Name>jumpsStmt</Name>
              <Attributes />
            </Identifier>
            <Parameters />
          </methodHeaderNode>
          <statemetBlock>
            <statements>
              <StatementNode xsi:type="LocalVariableDeclarationNode">
                <LocalVariables>
                  <Variable IsStatic="false">
                    <identifier>
                      <Name>nuevo</Name>
                      <Attributes />
                    </identifier>
                    <TypeNode xsi:type="ArrayType">
                      <AbstractTypeNode>
                        <Identifier>
                          <Name>TokenType</Name>
                          <Attributes />
                        </Identifier>
                      </AbstractTypeNode>
                      <MultiDimArrays>
                        <MultiDimArray dimensions="1" />
                      </MultiDimArrays>
                    </TypeNode>
                    <ArrayInitializerNode>
                      <ArrayInitializers>
                        <VariableInitializer xsi:type="AccessorNode">
                          <primary xsi:type="IdNode">
                            <Name>TokenType</Name>
                            <Attributes />
                          </primary>
                          <identifier>
                            <Name>OP_TERNARY</Name>
                            <Attributes />
                          </identifier>
                        </VariableInitializer>
                        <VariableInitializer xsi:type="AccessorNode">
                          <primary xsi:type="IdNode">
                            <Name>TokenType</Name>
                            <Attributes />
                          </primary>
                          <identifier>
                            <Name>PUNT_COLON</Name>
                            <Attributes />
                          </identifier>
                        </VariableInitializer>
                        <VariableInitializer xsi:type="AccessorNode">
                          <primary xsi:type="IdNode">
                            <Name>TokenType</Name>
                            <Attributes />
                          </primary>
                          <identifier>
                            <Name>OP_NULL_COALESCING</Name>
                            <Attributes />
                          </identifier>
                        </VariableInitializer>
                        <VariableInitializer xsi:type="AccessorNode">
                          <primary xsi:type="IdNode">
                            <Name>TokenType</Name>
                            <Attributes />
                          </primary>
                          <identifier>
                            <Name>OP_OR</Name>
                            <Attributes />
                          </identifier>
                        </VariableInitializer>
                        <VariableInitializer xsi:type="AccessorNode">
                          <primary xsi:type="IdNode">
                            <Name>TokenType</Name>
                            <Attributes />
                          </primary>
                          <identifier>
                            <Name>OP_AND</Name>
                            <Attributes />
                          </identifier>
                        </VariableInitializer>
                        <VariableInitializer xsi:type="AccessorNode">
                          <primary xsi:type="IdNode">
                            <Name>TokenType</Name>
                            <Attributes />
                          </primary>
                          <identifier>
                            <Name>OP_BITWISE_OR</Name>
                            <Attributes />
                          </identifier>
                        </VariableInitializer>
                        <VariableInitializer xsi:type="AccessorNode">
                          <primary xsi:type="IdNode">
                            <Name>TokenType</Name>
                            <Attributes />
                          </primary>
                          <identifier>
                            <Name>OP_XOR</Name>
                            <Attributes />
                          </identifier>
                        </VariableInitializer>
                        <VariableInitializer xsi:type="AccessorNode">
                          <primary xsi:type="IdNode">
                            <Name>TokenType</Name>
                            <Attributes />
                          </primary>
                          <identifier>
                            <Name>OP_BITWISE_AND</Name>
                            <Attributes />
                          </identifier>
                        </VariableInitializer>
                        <VariableInitializer xsi:type="AccessorNode">
                          <primary xsi:type="IdNode">
                            <Name>TokenType</Name>
                            <Attributes />
                          </primary>
                          <identifier>
                            <Name>PUNT_PAREN_OPEN</Name>
                            <Attributes />
                          </identifier>
                        </VariableInitializer>
                        <VariableInitializer xsi:type="AccessorNode">
                          <primary xsi:type="IdNode">
                            <Name>TokenType</Name>
                            <Attributes />
                          </primary>
                          <identifier>
                            <Name>RW_NEW</Name>
                            <Attributes />
                          </identifier>
                        </VariableInitializer>
                        <VariableInitializer xsi:type="AccessorNode">
                          <primary xsi:type="IdNode">
                            <Name>TokenType</Name>
                            <Attributes />
                          </primary>
                          <identifier>
                            <Name>ID</Name>
                            <Attributes />
                          </identifier>
                        </VariableInitializer>
                        <VariableInitializer xsi:type="AccessorNode">
                          <primary xsi:type="IdNode">
                            <Name>TokenType</Name>
                            <Attributes />
                          </primary>
                          <identifier>
                            <Name>RW_THIS</Name>
                            <Attributes />
                          </identifier>
                        </VariableInitializer>
                      </ArrayInitializers>
                    </ArrayInitializerNode>
                  </Variable>
                </LocalVariables>
              </StatementNode>
              <StatementNode xsi:type="ForeachStatementNode">
                <type xsi:type="VarTypeNode" />
                <identifier>
                  <Name>type</Name>
                  <Attributes />
                </identifier>
                <expression xsi:type="IdNode">
                  <Name>types</Name>
                  <Attributes />
                </expression>
                <body xsi:type="StatementBlockNode">
                  <statements>
                    <StatementNode xsi:type="IfStatementNode">
                      <expression xsi:type="FunctionCallExpressionNode">
                        <identifier xsi:type="AccessorNode">
                          <primary xsi:type="IdNode">
                            <Name>type</Name>
                            <Attributes />
                          </primary>
                          <identifier>
                            <Name>Contains</Name>
                            <Attributes />
                          </identifier>
                        </identifier>
                        <arguments>
                          <ArgumentNode>
                            <ExpressionNode xsi:type="AccessorNode">
                              <primary xsi:type="IdNode">
                                <Name>token</Name>
                                <Attributes />
                              </primary>
                              <identifier>
                                <Name>type</Name>
                                <Attributes />
                              </identifier>
                            </ExpressionNode>
                          </ArgumentNode>
                        </arguments>
                      </expression>
                      <statements xsi:type="StatementBlockNode">
                        <statements>
                          <StatementNode xsi:type="JumpStatementNode">
                            <type>RW_BREAK</type>
                          </StatementNode>
                        </statements>
                      </statements>
                      <elseBock>
                        <statements xsi:type="StatementBlockNode">
                          <statements>
                            <StatementNode xsi:type="JumpStatementNode">
                              <type>RW_CONTINUE</type>
                            </StatementNode>
                          </statements>
                        </statements>
                      </elseBock>
                    </StatementNode>
                  </statements>
                </body>
              </StatementNode>
              <StatementNode xsi:type="JumpStatementNode">
                <type>RW_RETURN</type>
                <expression xsi:type="FunctionCallExpressionNode">
                  <identifier xsi:type="AccessorNode">
                    <primary xsi:type="FunctionCallExpressionNode">
                      <identifier xsi:type="AccessorNode">
                        <primary xsi:type="FunctionCallExpressionNode">
                          <identifier xsi:type="AccessorNode">
                            <primary xsi:type="FunctionCallExpressionNode">
                              <identifier xsi:type="AccessorNode">
                                <primary xsi:type="FunctionCallExpressionNode">
                                  <identifier xsi:type="AccessorNode">
                                    <primary xsi:type="FunctionCallExpressionNode">
                                      <identifier xsi:type="AccessorNode">
                                        <primary xsi:type="FunctionCallExpressionNode">
                                          <identifier xsi:type="AccessorNode">
                                            <primary xsi:type="FunctionCallExpressionNode">
                                              <identifier xsi:type="AccessorNode">
                                                <primary xsi:type="FunctionCallExpressionNode">
                                                  <identifier xsi:type="AccessorNode">
                                                    <primary xsi:type="FunctionCallExpressionNode">
                                                      <identifier xsi:type="AccessorNode">
                                                        <primary xsi:type="IdNode">
                                                          <Name>nuevo</Name>
                                                          <Attributes />
                                                        </primary>
                                                        <identifier>
                                                          <Name>Concat</Name>
                                                          <Attributes />
                                                        </identifier>
                                                      </identifier>
                                                      <arguments>
                                                        <ArgumentNode>
                                                          <ExpressionNode xsi:type="IdNode">
                                                            <Name>equalityOperatorOptions</Name>
                                                            <Attributes />
                                                          </ExpressionNode>
                                                        </ArgumentNode>
                                                      </arguments>
                                                    </primary>
                                                    <identifier>
                                                      <Name>Concat</Name>
                                                      <Attributes />
                                                    </identifier>
                                                  </identifier>
                                                  <arguments>
                                                    <ArgumentNode>
                                                      <ExpressionNode xsi:type="IdNode">
                                                        <Name>relationalOperatorOptions</Name>
                                                        <Attributes />
                                                      </ExpressionNode>
                                                    </ArgumentNode>
                                                  </arguments>
                                                </primary>
                                                <identifier>
                                                  <Name>Concat</Name>
                                                  <Attributes />
                                                </identifier>
                                              </identifier>
                                              <arguments>
                                                <ArgumentNode>
                                                  <ExpressionNode xsi:type="IdNode">
                                                    <Name>Is_AsOperatorOptions</Name>
                                                    <Attributes />
                                                  </ExpressionNode>
                                                </ArgumentNode>
                                              </arguments>
                                            </primary>
                                            <identifier>
                                              <Name>Concat</Name>
                                              <Attributes />
                                            </identifier>
                                          </identifier>
                                          <arguments>
                                            <ArgumentNode>
                                              <ExpressionNode xsi:type="IdNode">
                                                <Name>shiftOperatorOptions</Name>
                                                <Attributes />
                                              </ExpressionNode>
                                            </ArgumentNode>
                                          </arguments>
                                        </primary>
                                        <identifier>
                                          <Name>Concat</Name>
                                          <Attributes />
                                        </identifier>
                                      </identifier>
                                      <arguments>
                                        <ArgumentNode>
                                          <ExpressionNode xsi:type="IdNode">
                                            <Name>additiveOperatorOptions</Name>
                                            <Attributes />
                                          </ExpressionNode>
                                        </ArgumentNode>
                                      </arguments>
                                    </primary>
                                    <identifier>
                                      <Name>Concat</Name>
                                      <Attributes />
                                    </identifier>
                                  </identifier>
                                  <arguments>
                                    <ArgumentNode>
                                      <ExpressionNode xsi:type="IdNode">
                                        <Name>multiplicativeOperatorOptions</Name>
                                        <Attributes />
                                      </ExpressionNode>
                                    </ArgumentNode>
                                  </arguments>
                                </primary>
                                <identifier>
                                  <Name>Concat</Name>
                                  <Attributes />
                                </identifier>
                              </identifier>
                              <arguments>
                                <ArgumentNode>
                                  <ExpressionNode xsi:type="IdNode">
                                    <Name>assignmentOperatorOptions</Name>
                                    <Attributes />
                                  </ExpressionNode>
                                </ArgumentNode>
                              </arguments>
                            </primary>
                            <identifier>
                              <Name>Concat</Name>
                              <Attributes />
                            </identifier>
                          </identifier>
                          <arguments>
                            <ArgumentNode>
                              <ExpressionNode xsi:type="IdNode">
                                <Name>unaryOperatorOptions</Name>
                                <Attributes />
                              </ExpressionNode>
                            </ArgumentNode>
                          </arguments>
                        </primary>
                        <identifier>
                          <Name>Concat</Name>
                          <Attributes />
                        </identifier>
                      </identifier>
                      <arguments>
                        <ArgumentNode>
                          <ExpressionNode xsi:type="IdNode">
                            <Name>literalOptions</Name>
                            <Attributes />
                          </ExpressionNode>
                        </ArgumentNode>
                      </arguments>
                    </primary>
                    <identifier>
                      <Name>ToArray</Name>
                      <Attributes />
                    </identifier>
                  </identifier>
                  <arguments />
                </expression>
              </StatementNode>
            </statements>
          </statemetBlock>
        </Method>
      </Methods>
    </Class>
  </defaultNamespace>
  <Namespaceses />
</CompilationUnitNode>